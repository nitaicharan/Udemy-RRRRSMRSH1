{"version":3,"sources":["actions/entries.action.js","components/DisplayBalance.js","components/DisplayBalances.js","actions/modals.action.js","components/EntryLine.js","components/EntryLines.js","components/MainHeader.js","hooks/UseEntryDetails.js","components/EntryForm.js","components/ModelEdit.js","components/ButtonSaveOrCancel.js","components/NewEntryForm.js","App.js","reducers/entries.reducer.js","reducers/modals.reducer.js","saga/deletion-entries.saga.js","saga/add-entries.saga.js","saga/entries.saga.js","store/configureStore.js","index.js","saga/index.js"],"names":["types","GET_ENTRIES","POPULATE_ENTRIES","POPULATE_ENTRY_DETAIL","ADD_ENTRY","REMOVE_ENTRY","UPDATE_ENTRY","REMOVE_ENTRY_RESULT","ADD_ENTRY_RESULT","addEntryRedux","payload","type","updateEntryRedux","id","entry","populateEntryDetails","DisplayBalance","title","value","color","size","Statistic","Label","style","textAlign","Value","isNaN","DisplayBalances","incomeTotal","expenseTotal","Segment","Grid","columns","divided","Row","Column","OPEN_EDIT_MODAL","CLOSE_EDIT_MODAL","closeEditModal","EntryLine","description","isExpense","dispatch","useDispatch","width","Icon","name","onClick","openEditModal","removeEntryRedux","EntryLines","entries","Container","map","MainHeader","Header","as","UseEntryDetails","useState","v","setV","d","setD","i","setI","useEffect","updateEntry","resetValues","addEntry","params","uuidv4","setValue","setDescription","setIsExpense","EntryForm","Form","Group","Input","icon","label","planceholder","onChange","event","target","iconPosition","compact","Checkbox","toggle","checked","oldState","ModelEdit","isOpen","entryUpdate","userEntryDetails","Modal","open","Content","Actions","Button","primary","ButtonSaveOrCancel","marginTop","Or","NewEntryForm","UserEntryDetails","unstackable","App","total","setTotal","setEntry","setIncomeTotal","setExpenseTotal","useSelector","state","modals","reduce","previous","current","Number","index","findIndex","reducer","initialState","action","entriesTypes","concat","filter","newEntry","modalTypes","deleteEntrySaga","take","entryTypes","call","deleteEntry","put","a","axios","delete","addEntrySaga","addEntryToDB","takeLatest","addEntryDetails","post","isExpensive","getAllEntries","getEntryDetails","getAllEntriesDetails","data","length","fork","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","combineReducers","modalsRedux","entriesReducer","composeWithDevTools","applyMiddleware","Object","values","entriesSaga","forEach","run","bind","entriesSagaDeletion","entriesSagaAdd","storeConfig","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44255d1d.chunk.js","sourcesContent":["const types = {\r\n    GET_ENTRIES: 'GET_ENTRIES',\r\n    POPULATE_ENTRIES: 'POPULATE_ENTRIES',\r\n    POPULATE_ENTRY_DETAIL: 'POPULATE_ENTRY_DETAILS',\r\n    ADD_ENTRY: 'ADD_ENTRY',\r\n    REMOVE_ENTRY: 'REMOVE_ENTRY',\r\n    UPDATE_ENTRY: 'UPDATE_ENTRY',\r\n    REMOVE_ENTRY_RESULT: 'REMOVE_ENTRY_RESULT',\r\n    ADD_ENTRY_RESULT: 'ADD_ENTRY_RESULT',\r\n};\r\n\r\nexport default types;\r\n\r\nexport const addEntryRedux = (payload) => ({ type: types.ADD_ENTRY, payload });\r\n\r\nexport const removeEntryRedux = (id) => ({ type: types.REMOVE_ENTRY, payload: { id } });\r\n\r\nexport const updateEntryRedux = (id, entry) => ({ type: types.UPDATE_ENTRY, payload: { id, entry } });\r\n\r\nexport const getAllEntries = (payload) => ({ type: types.GET_ENTRIES });\r\n\r\nexport const populateEntries = (entries) => ({ type: types.POPULATE_ENTRIES, payload: entries });\r\n\r\nexport const populateEntryDetails = (id,entry) => ({ type: types.POPULATE_ENTRY_DETAIL, payload: {id, entry} });","import React from 'react'\nimport { Statistic } from 'semantic-ui-react'\n\nfunction DisplayBalance({ title, value, color = 'black', size = 'tiny' }) {\n    return (\n        <Statistic size={size} color={color}>\n            <Statistic.Label style={{ textAlign: 'left' }}>{title}</Statistic.Label>\n            <Statistic.Value>{isNaN(value)? 0: value}</Statistic.Value>\n        </Statistic>\n    )\n}\n\nexport default DisplayBalance\n","import React from 'react'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport DisplayBalance from './DisplayBalance'\n\nfunction DisplayBalances({ incomeTotal, expenseTotal }) {\n    return (\n        <Segment textAlign=\"center\">\n            <Grid columns={2} divided>\n                <Grid.Row>\n                    <Grid.Column>\n                        <DisplayBalance color='green' title='Income: ' value={incomeTotal} />\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <DisplayBalance color='red' title='Expenses: ' value={expenseTotal} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n    )\n}\n\nexport default DisplayBalances\n","const type = {\r\n    OPEN_EDIT_MODAL: 'OPEN_EDIT_MODAL',\r\n    CLOSE_EDIT_MODAL: 'CLOSE_EDIT_MODAL',\r\n}\r\n\r\nexport default type;\r\n\r\nexport const openEditModal = (id) => ({ type: type.OPEN_EDIT_MODAL, payload: { id } });\r\n\r\nexport const closeEditModal = () => ({ type: type.CLOSE_EDIT_MODAL });","import React, { Fragment } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Grid, Icon, Segment } from 'semantic-ui-react';\r\nimport { removeEntryRedux } from './../actions/entries.action';\r\nimport { openEditModal } from './../actions/modals.action';\r\n\r\nfunction EntryLine({ id, description, value, isExpense = false }) {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Segment color={isExpense ? 'red' : 'green'}>\r\n                <Grid columns={3} textAlign=\"right\">\r\n                    <Grid.Row>\r\n                        <Grid.Column width={10} textAlign='left'>{description}</Grid.Column>\r\n                        <Grid.Column width={3} textAlign='right'>{value}</Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Icon name='edit' onClick={() => dispatch(openEditModal(id))} />\r\n                            <Icon name='trash' onClick={() => dispatch(removeEntryRedux(id))} />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EntryLine","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport EntryLine from './EntryLine'\r\n\r\nfunction EntryLines({ entries }) {\r\n    return (\r\n        <Container>\r\n            {entries.map(entry => <EntryLine key={entry.id} {...entry} />)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EntryLines\r\n","import React from 'react'\nimport { Header } from 'semantic-ui-react';\n\nfunction MainHeader({ title, type = 'h1' }) {\n    return <Header as={type}>{title}</Header>;\n}\n\nexport default MainHeader\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addEntryRedux, updateEntryRedux } from \"../actions/entries.action\";\r\nimport { closeEditModal } from \"../actions/modals.action\";\r\n\r\nconst UseEntryDetails = (description = '', value = '', isExpense = true) => {\r\n    const [v, setV] = useState(value);\r\n    const [d, setD] = useState(description);\r\n    const [i, setI] = useState(isExpense);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setV(value);\r\n        setD(description);\r\n        setI(isExpense);\r\n    }, [value, description, isExpense])\r\n\r\n    const updateEntry = (id) => {\r\n        dispatch(updateEntryRedux(id, {\r\n            value: v,\r\n            description: d,\r\n            isExpense: i,\r\n        }));\r\n\r\n        dispatch(closeEditModal());\r\n        resetValues();\r\n    }\r\n\r\n    const addEntry = (params) => {\r\n\r\n        dispatch(addEntryRedux({\r\n            id: uuidv4(),\r\n            description: d,\r\n            value: v,\r\n            isExpense: i\r\n        }));\r\n\r\n        resetValues();\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setD('');\r\n        setV('');\r\n        setI(true);\r\n    }\r\n\r\n    return {\r\n        value: v,\r\n        setValue: setV,\r\n        description: d,\r\n        setDescription: setD,\r\n        isExpense: i,\r\n        setIsExpense: setI,\r\n        addEntry,\r\n        updateEntry,\r\n    };\r\n}\r\n\r\nexport default UseEntryDetails;\r\n","import React, { Fragment } from 'react'\r\nimport { Checkbox, Form, Segment } from 'semantic-ui-react'\r\n\r\nfunction EntryForm({description, value, isExpense, setValue, setDescription, setIsExpense}) {\r\n    return (\r\n        <Fragment>\r\n            <Form.Group>\r\n                <Form.Input icon='tags' label='Description' width={12} planceholder='New shinny thing' onChange={(event) => setDescription(event.target.value)} value={description} />\r\n                <Form.Input width={4} label='value' planceholder='100.00' icon='dollar' iconPosition='left' onChange={(event) => setValue(event.target.value)} value={value}></Form.Input>\r\n            </Form.Group>\r\n\r\n            <Segment compact>\r\n                <Checkbox toggle label='is expense' checked={isExpense} onChange={() => setIsExpense(oldState => !oldState)} />\r\n            </Segment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EntryForm\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Modal } from 'semantic-ui-react';\r\nimport { closeEditModal } from '../actions/modals.action';\r\nimport userEntryDetails from \"./../hooks/UseEntryDetails\";\r\nimport EntryForm from './EntryForm';\r\n\r\nfunction ModelEdit({ isOpen, description, value, isExpense, id }) {\r\n    const dispatch = useDispatch();\r\n    const entryUpdate = userEntryDetails(description, value, isExpense);\r\n\r\n    return (\r\n        <Modal open={isOpen}>\r\n            <Modal.Header>Edit entry</Modal.Header>\r\n            <Modal.Content>\r\n                <EntryForm  {...entryUpdate} />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => dispatch(closeEditModal())}>Close</Button>\r\n                <Button onClick={() => entryUpdate.updateEntry(id)} primary>Ok</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModelEdit\r\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nfunction ButtonSaveOrCancel({ addEntry }) {\n  return (\n    <Button.Group style={{ marginTop: 20 }}>\n      <Button>Cancel</Button>\n      <Button.Or />\n      <Button primary onClick={()=> addEntry()}>Ok</Button>\n    </Button.Group>\n  )\n}\n\nexport default ButtonSaveOrCancel\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport UserEntryDetails from \"../hooks/UseEntryDetails\";\nimport ButtonSaveOrCancel from './ButtonSaveOrCancel';\nimport EntryForm from './EntryForm';\n\nfunction NewEntryForm() {\n  const {\n    value,\n    setValue,\n    description,\n    setDescription,\n    isExpense,\n    setIsExpense,\n    addEntry,\n  } = UserEntryDetails();\n\n  return (\n    <Form unstackable>\n      <EntryForm description={description} isExpense={isExpense} value={value} setValue={setValue} setDescription={setDescription} setIsExpense={setIsExpense} />\n\n      <ButtonSaveOrCancel addEntry={addEntry} description={description} value={value} isExpense={isExpense} />\n    </Form>\n  )\n}\n\nexport default NewEntryForm\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container } from 'semantic-ui-react';\nimport { getAllEntries } from './actions/entries.action';\nimport './App.css';\nimport DisplayBalance from './components/DisplayBalance';\nimport DisplayBalances from './components/DisplayBalances';\nimport EntryLines from './components/EntryLines';\nimport MainHeader from './components/MainHeader';\nimport ModelEdit from './components/ModelEdit';\nimport NewEntryForm from './components/NewEntryForm';\n\nfunction App() {\n  const [total, setTotal] = useState(0);\n  const [entry, setEntry] = useState();\n  const [incomeTotal, setIncomeTotal] = useState(0);\n  const [expenseTotal, setExpenseTotal] = useState(0);\n\n  const entries = useSelector(state => state.entries)\n  const { isOpen, id } = useSelector(state => state.modals);\n\n  useEffect(() => {\n    setIncomeTotal(entries.reduce((previous, current) => current.isExpense ? previous : previous + Number(current.value), 0));\n    setExpenseTotal(entries.reduce((previous, current) => current.isExpense ? previous + Number(current.value) : previous, 0));\n    setTotal(entries.reduce((previous, current) => current.isExpense ? previous - current.value : previous + Number(current.value), 0));\n  }, [entries])\n\n  useEffect(() => {\n    const index = entries.findIndex(entry => entry.id === id);\n    setEntry(entries[index]);\n  }, [isOpen, id, entries]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEntries());\n  }, [dispatch]);\n\n  return (\n\n    <Container>\n      <MainHeader title='Budget' />\n\n      <DisplayBalance size='small' title='Your Balance: ' value={total} />\n\n      <DisplayBalances incomeTotal={incomeTotal} expenseTotal={expenseTotal} />\n\n      <MainHeader title='History' type='h3' />\n\n      <EntryLines entries={entries} />\n\n      <MainHeader title='Add new transaction' type='h3' />\n\n      <NewEntryForm />\n\n      <ModelEdit isOpen={isOpen} {...entry} />\n\n    </Container>\n  );\n}\n\nexport default App;","import entriesTypes from \"./../actions/entries.action\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case entriesTypes.POPULATE_ENTRIES:\r\n            return action.payload;\r\n        case entriesTypes.ADD_ENTRY_RESULT:\r\n            return state.concat(action.payload);\r\n\r\n        case entriesTypes.REMOVE_ENTRY_RESULT:\r\n            return state.filter(entry => entry.id !== action.payload.id);\r\n\r\n        case entriesTypes.POPULATE_ENTRY_DETAIL:\r\n        case entriesTypes.UPDATE_ENTRY:\r\n            const newEntry = [...state]\r\n            const index = newEntry.findIndex(entry => entry.id === action.payload.id);\r\n            newEntry[index] = { ...newEntry[index], ...action.payload.entry };\r\n            return newEntry;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nvar initialState = [];","import modalTypes from \"../actions/modals.action\"; \r\n\r\nconst reducer = (state = { isOpen: false }, action) => {\r\n    switch (action.type) {\r\n        case modalTypes.OPEN_EDIT_MODAL:\r\n            return { ...state, isOpen: true, id: action.payload.id };\r\n        case modalTypes.CLOSE_EDIT_MODAL:\r\n            return { ...state, isOpen: false, id: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { call, put, take } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\nimport entryTypes from \"../actions/entries.action\";\r\n\r\nexport default function* deleteEntrySaga() {\r\n    while (true) {\r\n        const { payload } = yield take(entryTypes.REMOVE_ENTRY);\r\n        yield call(deleteEntry, payload.id);\r\n        yield put({ type: 'REMOVE_ENTRY_RESULT', payload: { id: payload.id } })\r\n    }\r\n}\r\n\r\nasync function deleteEntry(id) {\r\n    await axios.delete(`http://localhost:3001/entries/${id}`);\r\n    await axios.delete(`http://localhost:3001/values/${id}`);\r\n}","import { call, takeLatest,put } from \"@redux-saga/core/effects\";\r\nimport axios from \"axios\";\r\nimport entryTypes from '../actions/entries.action';\r\n\r\nexport default function* addEntrySaga() {\r\n    yield takeLatest(entryTypes.ADD_ENTRY, addEntryToDB);\r\n}\r\n\r\nfunction* addEntryToDB({ payload }) {\r\n    yield call(addEntry, payload);\r\n    yield call(addEntryDetails, payload);\r\n    yield put({type: entryTypes.ADD_ENTRY_RESULT, payload})\r\n}\r\n\r\nasync function addEntry({ id, description }) {\r\n    await axios.post('http://localhost:3001/entries', { id, description });\r\n}\r\n\r\nasync function addEntryDetails({ id, isExpensive, value }) {\r\n    await axios.post('http://localhost:3001/values', { id, isExpensive, value })\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { call, fork, put, take } from \"redux-saga/effects\";\r\nimport entriesTypes, { populateEntries, populateEntryDetails } from \"../actions/entries.action\";\r\n\r\nexport function* getAllEntries() {\r\n    yield take(entriesTypes.GET_ENTRIES);\r\n    const { data } = yield call(axios, 'http://localhost:3001/entries');\r\n    yield put(populateEntries(data));\r\n}\r\n\r\nexport function* getEntryDetails(id) {\r\n    const { data } = yield call(axios, `http://localhost:3001/values/${id}`);\r\n    yield put(populateEntryDetails(id, data));\r\n}\r\n\r\nexport function* getAllEntriesDetails() {\r\n    const { payload } = yield take(entriesTypes.POPULATE_ENTRIES);\r\n\r\n    for (let index = 0; index < payload.length; index++) {\r\n        const entry = payload[index];\r\n        yield fork(getEntryDetails, entry.id);\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport entriesReducer from \"../reducers/entries.reducer\";\r\nimport modalsRedux from \"../reducers/modals.reducer\";\r\nimport { initSagas } from \"../saga/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            modals: modalsRedux,\r\n            entries: entriesReducer,\r\n        }),\r\n        composeWithDevTools(\r\n            applyMiddleware(...middlewares),\r\n        ),\r\n\r\n    );\r\n    initSagas(sagaMiddleware);\r\n    return store;\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport './index.css';\nimport storeConfig from './store/configureStore';\n\nconst store = storeConfig();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// import * as testSaga from \"./test.saga\";\r\nimport * as entriesSagaDeletion from \"../saga/deletion-entries.saga\";\r\nimport * as entriesSagaAdd from \"./add-entries.saga\";\r\nimport * as entriesSaga from \"./entries.saga\";\r\n\r\nexport function initSagas(sagaMiddleware) {\r\n    // Object.values(testSaga).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n    Object.values(entriesSaga).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n    Object.values(entriesSagaDeletion).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n    Object.values(entriesSagaAdd).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n}"],"sourceRoot":""}